package gitgui;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintStream;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Font;

public class GitCommit extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1145962955197766911L;
	private JPanel contentPane;
	private JFrame frame;
	private String directory;
	private PrintStream printstream;
	private JTextField textField;
	
	/**
	 * Create the frame.
	 */
	public GitCommit(String directory) {
		setTitle("Git GUI");
		try {
			frame = this;
			this.directory = directory;
			printstream = new PrintStream(new FileOutputStream(new File("./src/logs/GitCommit-"+System.currentTimeMillis()+".txt")), true);
			System.setOut(printstream);
		} catch(Exception e) {
			e.printStackTrace();
		}
		initialize();
	}
	
	public void initialize() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 411, 246);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		textField = new JTextField();
		textField.setBounds(48, 62, 298, 30);
		contentPane.add(textField);
		textField.setColumns(10);
		
		JButton btnCommit = new JButton("Commit");
		btnCommit.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnCommit.setBounds(150, 134, 88, 30);
		contentPane.add(btnCommit);
	}
}
